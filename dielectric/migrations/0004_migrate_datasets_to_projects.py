# Generated by Django 5.2.5 on 2025-08-09 02:38

from django.db import migrations
from django.conf import settings


def migrate_datasets_to_projects(apps, schema_editor):
    """
    Create default projects for existing datasets.
    Each user gets a "Default Project" with all their datasets.
    """
    Dataset = apps.get_model('dielectric', 'Dataset')
    Project = apps.get_model('dielectric', 'Project')
    ProjectMembership = apps.get_model('dielectric', 'ProjectMembership')
    User = apps.get_model(settings.AUTH_USER_MODEL)
    
    # Get all datasets grouped by owner
    users_with_datasets = Dataset.objects.values('owner').distinct()
    
    for user_data in users_with_datasets:
        owner_id = user_data['owner']
        if not owner_id:
            continue  # Skip datasets with no owner
            
        try:
            user = User.objects.get(id=owner_id)
        except User.DoesNotExist:
            continue
        
        # Create a default project for this user
        project = Project.objects.create(
            name=f"{user.username}'s Default Project",
            description="Auto-created project for existing datasets",
            visibility="private",
            created_by=user,
            dataset_count=0,
            total_data_points=0
        )
        
        # Create owner membership for the user
        ProjectMembership.objects.create(
            project=project,
            user=user,
            role="owner"
        )
        
        # Assign all user's datasets to this project
        user_datasets = Dataset.objects.filter(owner=user, project__isnull=True)
        for dataset in user_datasets:
            dataset.project = project
            dataset.save()
        
        # Update project metadata
        project.dataset_count = user_datasets.count()
        project.total_data_points = sum(d.row_count or 0 for d in user_datasets)
        project.save()


def reverse_migrate_datasets(apps, schema_editor):
    """
    Reverse migration: remove project assignments from datasets
    """
    Dataset = apps.get_model('dielectric', 'Dataset')
    Project = apps.get_model('dielectric', 'Project')
    
    # Clear project assignments
    Dataset.objects.update(project=None)
    
    # Delete auto-created projects (those with "Default Project" in name)
    Project.objects.filter(name__contains="Default Project").delete()


class Migration(migrations.Migration):

    dependencies = [
        ('dielectric', '0003_add_project_structure'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(
            migrate_datasets_to_projects,
            reverse_migrate_datasets,
            elidable=True,
        ),
    ]

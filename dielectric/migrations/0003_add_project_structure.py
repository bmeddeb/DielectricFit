# Generated by Django 5.2.5 on 2025-08-09 02:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dielectric', '0002_analysis_artifact_fittedcurve_fittingsession_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('member', 'Member'), ('viewer', 'Viewer')], max_length=16)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.AlterField(
            model_name='dataset',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_datasets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('internal', 'Internal'), ('public', 'Public')], default='private', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('dataset_count', models.IntegerField(default=0)),
                ('total_data_points', models.BigIntegerField(default=0)),
                ('last_activity_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='dielectric.project'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['project', 'created_at'], name='idx_dataset_project_created'),
        ),
        migrations.AddConstraint(
            model_name='dataset',
            constraint=models.UniqueConstraint(fields=('project', 'ingest_fingerprint'), name='uq_dataset_project_fingerprint'),
        ),
        migrations.AddField(
            model_name='projectactivity',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='dielectric.project'),
        ),
        migrations.AddField(
            model_name='projectactivity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='invited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_project_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='dielectric.project'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['created_by', 'created_at'], name='idx_project_creator_created'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['visibility', 'created_at'], name='idx_project_visibility_created'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['last_activity_at'], name='idx_project_last_activity'),
        ),
        migrations.AddIndex(
            model_name='projectactivity',
            index=models.Index(fields=['project', 'created_at'], name='idx_activity_project_created'),
        ),
        migrations.AddIndex(
            model_name='projectactivity',
            index=models.Index(fields=['user', 'created_at'], name='idx_activity_user_created'),
        ),
        migrations.AddIndex(
            model_name='projectmembership',
            index=models.Index(fields=['user', 'joined_at'], name='idx_membership_user_joined'),
        ),
        migrations.AddIndex(
            model_name='projectmembership',
            index=models.Index(fields=['project', 'role'], name='idx_membership_project_role'),
        ),
        migrations.AddConstraint(
            model_name='projectmembership',
            constraint=models.UniqueConstraint(fields=('project', 'user'), name='uq_project_membership'),
        ),
    ]
